

openapi: 3.1.0
info:
  title: ECHOHUb API
  description: >-
    API Endpoints for the Lockbox  clients.

        SandBox url: https://sandbox.echohealthincapi.com/
        Production Url : https://api.echohealthincapi.com/

    # Authentication

    Authentication is a process by which a system verifies the identity of a
    user accessing this API.       

    <!-- ReDoc-Inject: <security-definitions> -->

  version: v1

  contact:
    name: ECHO Health Inc.
    email: Echo.Hub@echohealthinc.com

servers:
  - url: https://sandbox.echohealthincapi.com
  - url: https://api.echohealthincapi.com

security: 
  -  {}


paths:
  #Authorization
  /api/v1/GetToken:
    $ref: paths/Authentication/api@RequestAuthentication@V1.yaml
  

  
  #Lockbox
  /api/LockBox/v1/LockBox:
    $ref: paths/LockBox/api@LockBox@v1@LockBoxAddressCreate.yaml
  /api/LockBox/v1/LockBox/{lbxDirectoryId}:
    put:
      tags: 
        -  Lockbox
      summary: Lockbox - Update 
      x-internal: true
      operationId: LockBoxUpdateProcess
      parameters:
        - name: lbxDirectoryId
          in: path 
          required: true
          schema:
            type: string
        - name: x-Authorization
          in: header 
          schema:
            type: string    
            $ref: components/headers/xAuthorization.yaml
      description: |
       This endpoint allows the user to update a lockbox in the directory of addresses. The data is first validated in the ECHO Hub system and is directed to the ECHO Hub internal lockbox endpoint. The request is then sent to the lockbox express library for updating a lockbox. Once the lockbox is updated, the ECHO Hub system will send a success message.  
    
       Once the user is authenticated, this endpoint generates an authorization token by using the API key and the Client key. This authorization token is valid for 30 minutes.
      requestBody:
        description: This endpoint allows is used to update a lockbox in the directory of addresses.
        required: true
        content:
          application/json:
            schema:
              $ref: components/schemas/LockBox/Request/LockBoxUpdateProcess.yaml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: components/schemas/LockBox/Response/LockBoxUpdateProcessResponse.yaml
              examples:
                mapName_001:
                  description: Please scroll the above dropdown list for more response codes 
                  summary: "001"
                  value:
                    ReponseCode: "001"
                    ReponseCodeDesc: Successful Transaction
                    ResponseTransactionID: Transaction Number
                    TransLog:                  
                      - ResponseCode: "001"
                        ResponseCodeDesc: Lockbox Updated Successfully

                mapName_900:   
                  description: Please scroll the above dropdown list for more response codes          
                  summary: "900"
                  value:
                    ReponseCode: "900"
                    ReponseCodeDesc: Transaction Failed
                    ResponseTransactionID: Transaction Number 
                    TransError:
                      - ErrorCode: 1061
                        ErrorDesc: Invalid or Missing LockBox Directory ID   
                      - ErrorCode: 1092
                        ErrorDesc: Invalid Address Line 1
                      - ErrorCode: 154
                        ErrorDesc: Invalid or Missing City
                      - ErrorCode: 155
                        ErrorDesc: Invalid or Missing State
                      - ErrorCode: 156
                        ErrorDesc: Invalid or Missing Zip Code
                      - ErrorCode: 150
                        ErrorDesc: Invalid or Missing Tax ID
                      - ErrorCode: 1063
                        ErrorDesc: Agreement Not a Valid Value
                      - ErrorCode: 2017
                        ErrorDesc: Status Not a Valid Value
                      - ErrorCode: 11006
                        ErrorDesc: LBX Directory ID Not Found 
    delete:
      tags:
        - Lockbox
      summary: Lockbox - Delete 
      operationId: LockBoxDeleteProcess
      parameters:
        - name: lbxDirectoryId
          in: path
          required: true
          schema: 
            type: string
        - name: x-Authorization
          in: header
          schema:
            type: string
            $ref: components/headers/xAuthorization.yaml
      description: |
        This endpoint allows the user to delete a lockbox from the directory of lockboxes. The data is first validated in the ECHO Hub system and is directed to the ECHO Hub internal lockbox endpoint. The request is then sent to the lockbox express library for deleting a lockbox. Once the lockbox is deleted, the ECHO Hub system will send a success message.  
        
        This endpoint uses ‘lbxDirectoryId’ as the input parameter.  
        lbxDirectoryId – This is a unique identifier for a payee and the associated P.O box.  
        
        Once the user is authenticated, this endpoint generates an authorization token by using the API key and the Client key. This authorization token is valid for 30 minutes.                             
      responses:  
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: components/schemas/LockBox/Response/LockBoxDeleteProcessResponse.yaml
              examples:  
                mapName_001:
                  description: Please scroll the above dropdown list for more response codes
                  summary: "001"
                  value:
                    ReponseCode: "001"
                    ReponseCodeDesc: Successful Transaction
                    ResponseTransactionID: Transaction Number
                    TransLog:
                    - ResponseCode: "001"
                      ResponseCodeDesc: Lockbox Deleted Successfully 
                mapName_900:   
                  description: Please scroll the above dropdown list for more response codes          
                  summary: "900"
                  value:
                    ReponseCode: "900"
                    ReponseCodeDesc: Transaction Failed
                    ResponseTransactionID: Transaction Number
                    TransError:  
                      - ErrorCode: "11001"
                        ErrorDesc: Lockbox Doesn't Exist      



     
    
  # /api/LockBox/v1/Payee:
  #   $ref: paths/LockBox/api@LockBox@v1@LockBoxpayeeCreate.yaml
  /api/LockBox/v1/Payee:
    $ref: paths/LockBox/api@LockBox@v1@LockBoxpayeeCreate.yaml
    
 
  /api/LockBox/v1/Payee/{lbxDirectoryId}/{payeeId}:  
    $ref: paths/LockBox/api@LockBox@v1@LockBoxPayeeDelete.yaml
    parameters:
      - name: lbxDirectoryId
        in: path
        required: true
        schema:
          type: string
      - name: payeeId 
        in: path
        required: true
        schema: 
          type: string 
  /api/LockBox/v1/Payee/{lbxDirectoryId}:
   put:
    tags:
      - Lockbox
    summary: Payee - Update
    operationId: LockBoxPayeeUpdateProcess
    parameters: 
      - name: lbxDirectoryId
        in: path
        required: true
        schema: 
          type: string 
      
      - name: x-Authorization
        in: header
        required: true
        schema:
          type: string
          $ref: components/headers/xAuthorization.yaml
           
          
    description: This endpoint allows the user to update a payee name in a given lockbox. The data is first validated in the ECHO Hub system and is directed to the ECHO Hub internal lockbox endpoint. The request is then sent to the lockbox express library for updating a payee name in a lockbox. Once a payee’s name is updated, the ECHO Hub system will send a success message.  


      Once the user is authenticated, this endpoint generates an authorization token by using the API key and the Client key. This authorization token is valid for 30 minutes.
  
    requestBody:
      description: This endpoint is used to update a payee name in a given lockbox.
      required: true
      content:
        application/json:
          schema:
            $ref: components/schemas/LockBox/Request/LockBoxPayeeUpdateProcess.yaml
    responses:
      '200':
        description: Success
        content:
          application/json:
            schema:
              $ref: components/schemas/LockBox/Response/LockBoxPayeeUpdateProcessResponse.yaml
            examples:
              mapName_001:   
                description: Please scroll the above dropdown list for more response codes          
                summary: "001"
                value:
                  ReponseCode: "001"
                  ReponseCodeDesc: Successful Transaction
                  ResponseTransactionID: Transaction Number
                  TransLog:                  
                    - ResponseCode: "001"
                      ResponseCodeDesc: Payee Updated Successfully
  
              mapName_900:   
                description: Please scroll the above dropdown list for more response codes          
                summary: "900"
                value:
                  ReponseCode: "900"
                  ReponseCodeDesc: Transaction Failed
                  ResponseTransactionID: Transaction Number
                  TransError:  
                   -  ErrorCode: "1061"
                      ErrorDesc: Invalid or Missing LockBox Directory ID
                   -  ErrorCode: "1041"
                      ErrorDesc: Invalid or Missing Payee ID
                   -  ErrorCode: "1000"
                      ErrorDesc: Invalid or Missing Payee Name 
                   -  ErrorCode: "11003"
                      ErrorDesc: Payee Doesn't Exist        
                      
  /api/LockBox/v1/Lookup:
    $ref: paths/LockBox/api@LockBox@v1@Lookup.yaml
  /api/LockBox/v1/Lookup/{BatchTransactionId}:  
    $ref: paths/LockBox/api@LockBox@v1@LookupStatus.yaml              
    parameters: 
      - name: BatchTransactionId
        in: path
        required: true
        schema: 
          type: string 
      
  
  

components:
  securitySchemes:
    x-ApiKey:
      type: apiKey
      name: x-ApiKey
      description: The API key
      in: header
    x-ClientKey:
      type: apiKey
      description: The Client key
      name: x-ClientKey
      in: header

tags:
  #Authorization
  - name: Authorization
    description: |
      This endpoint helps to generate the Authorization Token for accessing the endpoints.
  
  #Lockbox
  - name: Lockbox
    description: |
      Lockbox refers to a payment service that helps speed up receiving and processing check payments. With lockbox service, the checks are mailed to a separate P.O (Post Office) box address maintained by the lockbox provider, such as a bank. The checks are collected, opened, scanned, and deposited directly by the bank. Each day, the deposits will be entered into an automated system with details available via web access.

      On the other hand, lockbox express provides a more efficient system to receive and deposit check payments. The checks and any other payment documents are sent electronically and when received are scanned in a single process reducing the manual effort required to handle the documents several times. 

      Clients can use the Lockbox APIs to build the directory of eligible P.O. Boxes (lockboxes) and then to submit payment information to determine which payments can be sent electronically to an eligible lockbox.  

      Lockbox payment has three APIs - Lockbox, Lockbox Payee and Lockbox Lookup  

      (1) Lockbox  
      The Lockbox API is used to maintain a list of a client’s eligible lockboxes for delivering electronic payments to the payees. This helps a client send the payment addresses to ECHO Hub for processing the payments. 

      The lockbox API allows ‘Post’, ‘Put’, and ‘Delete’ operations which correspond to add, update, and delete lockbox addresses respectively.  


      (2) Lockbox Payee  
      Lockbox payee API is used to maintain a list of payees associated with each of the lockboxes. This helps a client deliver electronic payments to the payees using the lockbox express process by sending the payment addresses to ECHO Hub for processing payments.  

      The lockbox payee API allows ‘Post’, ‘Put’, and ‘Delete’ operations for a given lockbox payee which correspond to add, update, and delete payee names respectively.  

      (3) Lockbox Lookup  
      This API enables the consumer to send a list of payment addresses to perform a lookup for a match on a lockbox in the lockbox directory. Lockbox lookup API helps a client to send payment addresses to ECHO Hub for determining matches to a Lockbox.  

      Lockbox lookup allows ‘Post’ and ‘Get’ operations. The Post method helps to find a lockbox match in the lockbox directory while the Get method helps to know the status of lockbox batch transactions.

  